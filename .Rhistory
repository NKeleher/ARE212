# geom_text(data = city_centers, family = "CharisSIL", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
xlim(zip_dt$long %>% range()) +
ylim(zip_dt$lat %>% range()) +
coord_quickmap()
# Save
# save_beamer(gg_tmp, "studyAreaNoLegend", width = 14 * 0.7, height = 14 * 0.7,
save_beamer(gg_tmp, "studyAreaWithLegend", width = 6, height = 6,
themes = theme(
# legend.position = "none",
axis.text = element_blank(),
legend.key.size = unit(1, "cm"),
legend.title = element_text(face = "bold", size = 4),
legend.text = element_text(size = 4),
NULL
))
# save_paper(gg_tmp, "studyArea", width = 6, height = 6,
#   themes = theme(
#     legend.position = "none",
#     axis.text = element_blank(),
#     legend.key.size = unit(1, "cm"),
#     # # Add panel to match highlighted rectangle from service area map (below)
#     # panel.border  = element_rect(
#     #   fill = NA, color = "grey70", size = 0.25, linetype = "dashed"),
#     NULL
# Figure: Common zip code map --------------------------------------------------
# Load additional packages
p_load(rgdal, broom, rgeos, maptools)
# Load the zip code shapefile
zip_shp <- readOGR(
dsn = paste0(dir_spatial, "CaliforniaZipCodes"),
layer = "CaliforniaZipCodes")
# Load the common cities CSV
common_dt <- fread(paste0(dir_csv, "commonCityZips.csv"))
# Convert zips to character
common_dt[, zip := as.character(zip)]
# Take subset of shapefile for zip codes that are in the common cities file
zip_shp %<>% subset(ZIP_CODE %in% common_dt$zip)
# Convert to data.table
zip_dt <- tidy(zip_shp, region = "ZIP_CODE") %>% data.table()
# Join information
zip_dt %<>% merge(y = common_dt, by.x = "id", by.y = "zip",
all.x = T, all.y = F, sort = F)
# Add column combining utilities' presence
zip_dt[pge == F & socal == F, utility := "neither"]
zip_dt[pge == T & socal == F, utility := "pge"]
zip_dt[pge == F & socal == T, utility := "socal"]
zip_dt[pge == T & socal == T, utility := "both"]
# Cities' centers
city_centers <- zip_dt[, list(long = mean(long), lat = mean(lat)), by = city]
# More adjustements
city_centers[city == "Del Rey", lat := lat + 0.03]
city_centers[city == "Fellows", lat := lat + 0.10]
city_centers[city == "Tehachapi", lat := lat - 0.03]
city_centers[city == "Paso Robles", lat := lat + 0.01]
city_centers[city == "Templeton", lat := lat - 0.1]
# Drop "neither" and order
zip_dt <- zip_dt[utility != "neither"]
zip_dt[, utility_fac := factor(utility,
levels = c("pge", "both"),
ordered = T,
labels = c("Only PG&E", "Both PG&E and SoCalGas"))]
# Plot
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac), alpha = 0.9) +
geom_path(color = "grey90", size = 0.1, alpha = 0.9) +
xlab("") + ylab("") +
scale_fill_manual("Utility presence:",
# scale_fill_manual("Utilities serving the zip code:",
# values = c("#4DB6AC", "#B0BEC5"),
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
geom_text(data = city_centers, family = "Roboto", size = 3.5,
# geom_text(data = city_centers, family = "CharisSIL", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
xlim(zip_dt$long %>% range()) +
ylim(zip_dt$lat %>% range()) +
coord_quickmap()
# Save
# save_beamer(gg_tmp, "studyAreaNoLegend", width = 14 * 0.7, height = 14 * 0.7,
save_beamer(gg_tmp, "studyAreaWithLegend", width = 6, height = 6,
themes = theme(
# legend.position = "none",
axis.text = element_blank(),
legend.key.size = unit(1, "cm"),
legend.title = element_text(face = "bold", size = 14),
legend.text = element_text(size = 14),
NULL
))
# save_paper(gg_tmp, "studyArea", width = 6, height = 6,
#   themes = theme(
#     legend.position = "none",
#     axis.text = element_blank(),
#     legend.key.size = unit(1, "cm"),
#     # # Add panel to match highlighted rectangle from service area map (below)
#     # panel.border  = element_rect(
#     #   fill = NA, color = "grey70", size = 0.25, linetype = "dashed"),
#     NULL
#   ))
# rm(list = c("zip_shp", "zip_dt", "common_dt", "city_centers", "gg_tmp"))
# gc()
# Figure: Common zip code map --------------------------------------------------
# Load additional packages
p_load(rgdal, broom, rgeos, maptools)
# Load the zip code shapefile
zip_shp <- readOGR(
dsn = paste0(dir_spatial, "CaliforniaZipCodes"),
layer = "CaliforniaZipCodes")
# Load the common cities CSV
common_dt <- fread(paste0(dir_csv, "commonCityZips.csv"))
# Convert zips to character
common_dt[, zip := as.character(zip)]
# Take subset of shapefile for zip codes that are in the common cities file
zip_shp %<>% subset(ZIP_CODE %in% common_dt$zip)
# Convert to data.table
zip_dt <- tidy(zip_shp, region = "ZIP_CODE") %>% data.table()
# Join information
zip_dt %<>% merge(y = common_dt, by.x = "id", by.y = "zip",
all.x = T, all.y = F, sort = F)
# Add column combining utilities' presence
zip_dt[pge == F & socal == F, utility := "neither"]
zip_dt[pge == T & socal == F, utility := "pge"]
zip_dt[pge == F & socal == T, utility := "socal"]
zip_dt[pge == T & socal == T, utility := "both"]
# Cities' centers
city_centers <- zip_dt[, list(long = mean(long), lat = mean(lat)), by = city]
# More adjustements
city_centers[city == "Del Rey", lat := lat + 0.03]
city_centers[city == "Fellows", lat := lat + 0.10]
city_centers[city == "Tehachapi", lat := lat - 0.03]
city_centers[city == "Paso Robles", lat := lat + 0.01]
city_centers[city == "Templeton", lat := lat - 0.1]
# Drop "neither" and order
zip_dt <- zip_dt[utility != "neither"]
zip_dt[, utility_fac := factor(utility,
levels = c("pge", "both"),
ordered = T,
labels = c("Only PG&E", "Both PG&E and SoCalGas"))]
# Plot
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac), alpha = 0.9) +
geom_path(color = "grey90", size = 0.1, alpha = 0.9) +
xlab("") + ylab("") +
scale_fill_manual("Utility presence:",
# scale_fill_manual("Utilities serving the zip code:",
# values = c("#4DB6AC", "#B0BEC5"),
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
geom_text(data = city_centers, family = "Roboto", size = 3.5,
# geom_text(data = city_centers, family = "CharisSIL", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
xlim(zip_dt$long %>% range()) +
ylim(zip_dt$lat %>% range()) +
coord_quickmap()
# Save
# save_beamer(gg_tmp, "studyAreaNoLegend", width = 14 * 0.7, height = 14 * 0.7,
save_beamer(gg_tmp, "studyAreaWithLegend", width = 6, height = 6,
themes = theme(
# legend.position = "none",
axis.text = element_blank(),
legend.key.size = unit(1, "cm"),
legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(size = 11),
NULL
))
# save_paper(gg_tmp, "studyArea", width = 6, height = 6,
#   themes = theme(
#     legend.position = "none",
#     axis.text = element_blank(),
#     legend.key.size = unit(1, "cm"),
#     # # Add panel to match highlighted rectangle from service area map (below)
#     # panel.border  = element_rect(
#     #   fill = NA, color = "grey70", size = 0.25, linetype = "dashed"),
#     NULL
#   ))
# rm(list = c("zip_shp", "zip_dt", "common_dt", "city_centers", "gg_tmp"))
# gc()
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac), alpha = 0.9) +
geom_path(color = "grey90", size = 0.15, alpha = 0.9) +
xlab("") + ylab("") +
scale_fill_manual("Utility presence:",
# scale_fill_manual("Utilities serving the zip code:",
# values = c("#4DB6AC", "#B0BEC5"),
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
geom_text(data = city_centers, family = "Roboto", size = 3.5,
# geom_text(data = city_centers, family = "CharisSIL", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
xlim(zip_dt$long %>% range()) +
ylim(zip_dt$lat %>% range()) +
coord_quickmap()
# Save
# save_beamer(gg_tmp, "studyAreaNoLegend", width = 14 * 0.7, height = 14 * 0.7,
save_beamer(gg_tmp, "studyAreaWithoutLegend", width = 6, height = 6,
themes = theme(
legend.position = "none",
axis.text = element_blank(),
legend.key.size = unit(1, "cm"),
# legend.title = element_text(face = "bold", size = 12),
# legend.text = element_text(size = 11),
NULL
))
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac), alpha = 0.9) +
geom_path(color = "grey90", size = 0.15, alpha = 0.9) +
xlab("") + ylab("") +
scale_fill_manual("Utility presence:",
# scale_fill_manual("Utilities serving the zip code:",
# values = c("#4DB6AC", "#B0BEC5"),
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
geom_text(data = city_centers, family = "Roboto", size = 3.6,
# geom_text(data = city_centers, family = "CharisSIL", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
xlim(zip_dt$long %>% range()) +
ylim(zip_dt$lat %>% range()) +
coord_quickmap()
# Save
# save_beamer(gg_tmp, "studyAreaNoLegend", width = 14 * 0.7, height = 14 * 0.7,
save_beamer(gg_tmp, "studyAreaWithoutLegend", width = 6, height = 6,
themes = theme(
legend.position = "none",
axis.text = element_blank(),
legend.key.size = unit(1, "cm"),
# legend.title = element_text(face = "bold", size = 12),
# legend.text = element_text(size = 11),
NULL
))
# Figure: Common zip code map --------------------------------------------------
# Load additional packages
p_load(rgdal, broom, rgeos, maptools)
# Load the zip code shapefile
zip_shp <- readOGR(
dsn = paste0(dir_spatial, "CaliforniaZipCodes"),
layer = "CaliforniaZipCodes")
# Load the common cities CSV
common_dt <- fread(paste0(dir_csv, "commonCityZips.csv"))
# Convert zips to character
common_dt[, zip := as.character(zip)]
# Take subset of shapefile for zip codes that are in the common cities file
zip_shp %<>% subset(ZIP_CODE %in% common_dt$zip)
# Convert to data.table
zip_dt <- tidy(zip_shp, region = "ZIP_CODE") %>% data.table()
# Join information
zip_dt %<>% merge(y = common_dt, by.x = "id", by.y = "zip",
all.x = T, all.y = F, sort = F)
# Add column combining utilities' presence
zip_dt[pge == F & socal == F, utility := "neither"]
zip_dt[pge == T & socal == F, utility := "pge"]
zip_dt[pge == F & socal == T, utility := "socal"]
zip_dt[pge == T & socal == T, utility := "both"]
# Cities' centers
city_centers <- zip_dt[, list(long = mean(long), lat = mean(lat)), by = city]
# More adjustements
city_centers[city == "Del Rey", lat := lat + 0.03]
city_centers[city == "Fellows", lat := lat + 0.10]
city_centers[city == "Tehachapi", lat := lat - 0.03]
city_centers[city == "Paso Robles", lat := lat + 0.01]
city_centers[city == "Templeton", lat := lat - 0.1]
# Drop "neither" and order
zip_dt <- zip_dt[utility != "neither"]
zip_dt[, utility_fac := factor(utility,
levels = c("pge", "both"),
ordered = T,
labels = c("Only PG&E", "Both PG&E and SoCalGas"))]
# Plot
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac), alpha = 0.9) +
geom_path(color = "grey90", size = 0.15, alpha = 0.9) +
xlab("") + ylab("") +
scale_fill_manual("Utility presence:",
# scale_fill_manual("Utilities serving the zip code:",
# values = c("#4DB6AC", "#B0BEC5"),
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
geom_text(data = city_centers, family = "Roboto", size = 3.6,
# geom_text(data = city_centers, family = "CharisSIL", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
xlim(zip_dt$long %>% range()) +
ylim(zip_dt$lat %>% range()) +
coord_quickmap()
# Save
# save_beamer(gg_tmp, "studyAreaNoLegend", width = 14 * 0.7, height = 14 * 0.7,
save_beamer(gg_tmp, "studyAreaWithoutLegend", width = 6.1, height = 6.1,
themes = theme(
legend.position = "none",
axis.text = element_blank(),
legend.key.size = unit(1, "cm"),
# legend.title = element_text(face = "bold", size = 12),
# legend.text = element_text(size = 11),
NULL
))
# save_paper(gg_tmp, "studyArea", width = 6, height = 6,
#   themes = theme(
#     legend.position = "none",
#     axis.text = element_blank(),
#     legend.key.size = unit(1, "cm"),
#     # # Add panel to match highlighted rectangle from service area map (below)
#     # panel.border  = element_rect(
#     #   fill = NA, color = "grey70", size = 0.25, linetype = "dashed"),
#     NULL
#   ))
# rm(list = c("zip_shp", "zip_dt", "common_dt", "city_centers", "gg_tmp"))
# gc()
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac), alpha = 0.9) +
geom_path(color = "white", size = 0.15, alpha = 0.9) +
xlab("") + ylab("") +
scale_fill_manual("Utility presence:",
# scale_fill_manual("Utilities serving the zip code:",
# values = c("#4DB6AC", "#B0BEC5"),
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
geom_text(data = city_centers, family = "Roboto", size = 3.6,
# geom_text(data = city_centers, family = "CharisSIL", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
xlim(zip_dt$long %>% range()) +
ylim(zip_dt$lat %>% range()) +
coord_quickmap()
# Save
# save_beamer(gg_tmp, "studyAreaNoLegend", width = 14 * 0.7, height = 14 * 0.7,
save_beamer(gg_tmp, "studyAreaWithoutLegend", width = 6.1, height = 6.1,
themes = theme(
legend.position = "none",
axis.text = element_blank(),
legend.key.size = unit(1, "cm"),
# legend.title = element_text(face = "bold", size = 12),
# legend.text = element_text(size = 11),
NULL
))
gg_tmp <- ggplot(data = zip_dt,
aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = utility_fac), alpha = 0.9) +
geom_path(color = "grey93", size = 0.15, alpha = 0.9) +
xlab("") + ylab("") +
scale_fill_manual("Utility presence:",
# scale_fill_manual("Utilities serving the zip code:",
# values = c("#4DB6AC", "#B0BEC5"),
# values = c("#B0BEC5", "#4DB6AC"),
values = c("#ffc107", "#e40045")) +
geom_text(data = city_centers, family = "Roboto", size = 3.6,
# geom_text(data = city_centers, family = "CharisSIL", size = 3.5,
aes(x = long, y = lat, label = city, group = city)) +
xlim(zip_dt$long %>% range()) +
ylim(zip_dt$lat %>% range()) +
coord_quickmap()
# Save
# save_beamer(gg_tmp, "studyAreaNoLegend", width = 14 * 0.7, height = 14 * 0.7,
save_beamer(gg_tmp, "studyAreaWithoutLegend", width = 6.1, height = 6.1,
themes = theme(
legend.position = "none",
axis.text = element_blank(),
legend.key.size = unit(1, "cm"),
# legend.title = element_text(face = "bold", size = 12),
# legend.text = element_text(size = 11),
NULL
))
# save_paper(gg_tmp, "studyArea", width = 6, height = 6,
#   themes = theme(
#     legend.position = "none",
#     axis.text = element_blank(),
#     legend.key.size = unit(1, "cm"),
#     # # Add panel to match highlighted rectangle from service area map (below)
#     # panel.border  = element_rect(
#     #   fill = NA, color = "grey70", size = 0.25, linetype = "dashed"),
#     NULL
#   ))
# rm(list = c("zip_shp", "zip_dt", "common_dt", "city_centers", "gg_tmp"))
# gc()
ls()
# Setup ------------------------------------------------------------------------
# Options
options(stringsAsFactors = F)
Sys.setenv(TZ = "US/Pacific")
# Packages
library(pacman)
p_load(magrittr, data.table, lubridate, stringr, parallel, readstata13,
lfe,
ggplot2, ggthemes, ggalt, viridis)
# Directories
dir_data <- "/Users/edwardarubin/Downloads/Natality/Data/"
# Load natality data, 1995-2002 ------------------------------------------------
# Load natality data for 1995-2002 (common names for desired variables)
nat_list1 <- mclapply(
X = 1995:2002,
FUN = function(y) {
# Load year y's natality data
tmp_dt <- read.dta13(
file = paste0(dir_data, "natl", y, ".dta")
) %>% data.table()
# Grab the locations that we want: the DC MSA ('8840': see page 193, 1990)
tmp_dt <- tmp_dt[smsarfip == "8840"]
# Variables to keep
tmp_dt <- tmp_dt[, .(
yr = datayear,
resident_status = restatus,
birth_place = pldel,
birth_state = stoccfip,
birth_county = cntocfip,
m_state = stresfip,
m_county = cntyrfip,
m_age = dmage,
m_race = mrace3,
m_education = dmeduc,
m_married = dmar,
birth_order = livord9,
n_prenatal_visits = nprevis,
f_age = dfage,
f_race = frace4,
birth_month = birmon,
birth_weekday = weekday,
birth_gestation = dgestat,
child_sex = csex,
child_weight = dbirwt,
plurality = dplural,
child_apgar5 = fmaps,
birth_gestation_cl = clingest
)]
# Return dataset
return(tmp_dt)
},
mc.cores = 4)
# Join datasets into data table
nat_dt1 <- rbindlist(nat_list1, use.names = T, fill = T)
# Flag missing values
nat_dt1[child_weight == 9999, child_weight := NA]
nat_dt1[child_apgar5 == 99, child_apgar5 := NA]
nat_dt1[birth_gestation == 99, birth_gestation := NA]
nat_dt1[birth_gestation_cl == 99, birth_gestation_cl := NA]
nat_dt1[m_race := as.character(m_race)]
nat_dt1[m_race == "1", m_race := "white"]
nat_dt1[m_race == "2", m_race := "other"]
nat_dt1[m_race == "3", m_race := "black"]
nat_dt1[,m_race] %>% class
nat_dt1[,m_race] %>% head
nat_dt1[,m_race] %>% table
nat_dt1 <- rbindlist(nat_list1, use.names = T, fill = T)
nat_dt1[child_weight == 9999, child_weight := NA]
nat_dt1[child_apgar5 == 99, child_apgar5 := NA]
nat_dt1[birth_gestation == 99, birth_gestation := NA]
nat_dt1[birth_gestation_cl == 99, birth_gestation_cl := NA]
nat_dt1[m_race := as.character(m_race)]
# Join datasets into data table
nat_dt1 <- rbindlist(nat_list1, use.names = T, fill = T)
# Flag missing values
nat_dt1[child_weight == 9999, child_weight := NA]
nat_dt1[child_apgar5 == 99, child_apgar5 := NA]
nat_dt1[birth_gestation == 99, birth_gestation := NA]
nat_dt1[birth_gestation_cl == 99, birth_gestation_cl := NA]
nat_dt1[, m_race := as.character(m_race)]
nat_dt1[m_race == "1", m_race := "white"]
nat_dt1[m_race == "2", m_race := "other"]
nat_dt1[m_race == "3", m_race := "black"]
test <- read.dta13(
file = paste0(dir_data, "natl", 2002, ".dta")
) %>% data.table()
test %>% dim
test %>% head
library(pacman)
p_load(data.table, readstat13, magrittr)
dir <- "/Users/edwardarubin/Dropbox/Research/MyProjects/IndonesiaDeforestation/DataStata"
p_load(data.table, readstata13, magrittr)
p_load(data.table, readstata13, magrittr, haven)
tmp <- read_dta(paste0(dir, "sendToRubin.dta"))
library(pacman)
p_load(data.table, readstata13, magrittr, haven)
dir <- "/Users/edwardarubin/Dropbox/Research/MyProjects/IndonesiaDeforestation/DataStata"
tmp <- read_dta(paste0(dir, "sendToRubin.dta"))
dir(dir)
library(pacman)
p_load(data.table, readstata13, magrittr, haven)
dir <- "/Users/edwardarubin/Dropbox/Research/MyProjects/IndonesiaDeforestation/DataStata/"
tmp <- read_dta(paste0(dir, "sendToRubin.dta"))
View(tmp)
tmp %>% names
tmp$Status %>% uniqueN()
tmp$Status %>% unique
tmp$Status %>% table()
tmp %>% str
library(ggplot2)
ggplot(tmp, aes(x = name_2014)) + geom_histogram()
ggplot(tmp, aes(x = name_2014)) + geom_histogram(stat = "count")
library(lubridate)
ceiling_date(tmp$election_date)
ceiling_date(tmp$election_date, "month")
ceiling_date(tmp$election_date, "month") %>% table
?package_version
installed.packages()
setwd("Dropbox/Teaching/ARE212/")
library(rmarkdown)
setwd("/Users/edwardarubin/Dropbox/Teaching/ARE212")
render("section01.Rmd",
pdf_document(
latex_engine = "xelatex",
toc = T,
number_sections = T,
highlight = "pygments",
pandoc_args = c(
"--metadata=author:\"Ed Rubin\"",
pandoc_variable_arg("mainfont", "Charter"),
pandoc_variable_arg("monofont", "Hack"),
pandoc_variable_arg("fontsize", "11pt")
)
),
output_dir = "Section01")
