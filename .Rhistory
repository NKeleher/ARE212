red_pink <- "#E40045"
# My ggplot themes
theme_beamer <- theme_bw() + theme(
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = 'bottom',
legend.key = element_blank(),
panel.grid = element_blank(),
text = element_text(family = "Roboto", color = "black",
size = 16),
title = element_text(size = 18),
legend.text = element_text(size = 18),
legend.key.size = unit(2.5, "cm"))
theme_paper <- theme_bw() + theme(
panel.border = element_blank(),
axis.ticks = element_blank(),
legend.position = 'bottom',
legend.key = element_blank(),
panel.grid = element_blank(),
text = element_text(family = "CharisSIL", color = "black",
size = 11),
axis.text = element_text(color = "black"),
title = element_text(size = 12),
legend.text = element_text(size = 11),
legend.key.size = unit(1.5, "cm"))
# My own save functions
save_beamer <- function(gg_tmp, name, width = 16 * 0.7, height = 10 * 0.7,
themes = NULL) {
ggsave(filename = paste0(name, ".pdf"),
path = dir_figures,
plot = gg_tmp + theme_beamer + themes,
width = width,
height = height,
device = cairo_pdf)
embed_fonts(paste0(dir_figures, name, ".pdf"))
}
save_paper <- function(gg_tmp, name, width = 6.4, height = 4,
themes = NULL) {
ggsave(filename = paste0(name, ".pdf"),
path = dir_figures,
plot = gg_tmp + theme_paper + themes,
width = width,
height = height,
device = cairo_pdf)
embed_fonts(paste0(dir_figures, name, ".pdf"))
}
pge_dt <- fread(paste0(dir_csv, "pgeRateBreakdown.csv"))
pge_dt
pge_dt[, date_eff := mdy(date_eff)]
pge_dt
pge_dt
?data.table::melt
data.table::dcast(pge_dt, . ~ date_eff)
data.table::dcast(pge_dt, date_eff ~ .)
?data.table::melt
data.table::dcast(pge_dt, date_eff ~ ., value.var = "test")
data.table::dcast(pge_dt, date_eff ~ ., value.var = "date_eff")
data.table::dcast(pge_dt, date_eff ~ date_eff, value.var = "date_eff")
pge_dt
melt(pge_dt)
melt(pge_dt, id.var = "date_eff")
pge_dt <- fread(paste0(dir_csv, "pgeRateBreakdown.csv"))
# Format dates
pge_dt[, date_eff := mdy(date_eff)]
# Convert to long form
pge_dt %<>% melt(id.var = "date_eff")
pge_dt
pge_dt[,variable] %>% tables
pge_dt[,variable] %>% table
?melt
pge_dt <- fread(paste0(dir_csv, "pgeRateBreakdown.csv"))
# Format dates
pge_dt[, date_eff := mdy(date_eff)]
# Convert to long form
pge_dt %<>% melt(id.var = "date_eff", variable.name = "price")
pge_Dt
pge_dt
pge_dt <- fread(paste0(dir_csv, "pgeRateBreakdown.csv"))
# Format dates
pge_dt[, date_eff := mdy(date_eff)]
# Convert to long form
pge_dt %<>% melt(id.var = "date_eff", variable.name = "type")
pge_dt
purple <- "#6a1b9a"
ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("",
values = c("grey70", "black"),
labels = c("Marginal price", "Average price")) +
scale_linetype_manual("",
values = c("solid", "dashed"),
labels = c("Marginal price", "Average price"))
ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
xlab("") +
ylab("Volumetric charge ($ per therm)")
ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("",
values = c("grey70", "black"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS"))
ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("",
values = c(purple, dark_grey, light_grey, black),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS"))
ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("",
values = c(purple, dark_grey, light_grey, "black"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS"))
ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("",
values = c(purple, dark_grey, light_grey, "black"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) + theme_beamer
ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
geom_hline(yintercept = 0, color = "grey20", size = 0.4) +
geom_vline(xintercept = ymd(20000101),
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("",
values = c(purple, dark_grey, light_grey, "black"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS"))
ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
geom_hline(yintercept = 0, color = "grey20", size = 0.4) +
geom_vline(xintercept = ymd(20000101),
color = "grey20", size = 0.4) +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("",
values = c(purple, dark_grey, light_grey, "black"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS"))
ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
geom_hline(yintercept = 0, color = "grey20", size = 0.4) +
geom_vline(xintercept = ymd(20000101),
color = "grey20", size = 0.4) +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("",
values = c(purple, dark_grey, light_grey, "black"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) + theme_beamer
save_beamer(gg_tmp, "pgeTariffSeries",
themes = theme(
# legend.direction = "vertical",
# legend.title = element_text(face = "bold", size = 11),
legend.title = element_text(face = "bold", size = 18),
legend.text.align = 0,
axis.text = element_blank(),
legend.key.size = unit(9, "mm"),
NULL
))
# Figure: PG&E rate breakdown time series --------------------------------------
# Load the PG&E rate breakdown data
pge_dt <- fread(paste0(dir_csv, "pgeRateBreakdown.csv"))
# Format dates
pge_dt[, date_eff := mdy(date_eff)]
# Convert to long form
pge_dt %<>% melt(id.var = "date_eff", variable.name = "type")
# Plot the rate breakdown over time
gg_tmp <- ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
geom_hline(yintercept = 0, color = "grey20", size = 0.4) +
geom_vline(xintercept = ymd(20000101),
color = "grey20", size = 0.4) +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("Price component:",
values = c(purple, dark_grey, light_grey, "black"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("Price component:",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS"))
# Save
save_beamer(gg_tmp, "pgeTariffSeries",
themes = theme(
# legend.direction = "vertical",
# legend.title = element_text(face = "bold", size = 11),
legend.title = element_text(face = "bold", size = 18),
legend.text.align = 0,
axis.text = element_blank(),
legend.key.size = unit(9, "mm"),
NULL
))
# Figure: PG&E rate breakdown time series --------------------------------------
# Load the PG&E rate breakdown data
pge_dt <- fread(paste0(dir_csv, "pgeRateBreakdown.csv"))
# Format dates
pge_dt[, date_eff := mdy(date_eff)]
# Convert to long form
pge_dt %<>% melt(id.var = "date_eff", variable.name = "type")
# Plot the rate breakdown over time
gg_tmp <- ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
geom_hline(yintercept = 0, color = "grey20", size = 0.4) +
geom_vline(xintercept = ymd(20000101),
color = "grey20", size = 0.4) +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("Price component:",
values = c(purple, dark_grey, light_grey, "black"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("Price component:",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS"))
# Save
save_beamer(gg_tmp, "pgeTariffSeries",
themes = theme(
# legend.direction = "vertical",
# legend.title = element_text(face = "bold", size = 11),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(size = 15),
legend.text.align = 0,
# axis.text = element_blank(),
legend.key.size = unit(9, "mm"),
NULL
))
# Figure: PG&E rate breakdown time series --------------------------------------
# Load the PG&E rate breakdown data
pge_dt <- fread(paste0(dir_csv, "pgeRateBreakdown.csv"))
# Format dates
pge_dt[, date_eff := mdy(date_eff)]
# Convert to long form
pge_dt %<>% melt(id.var = "date_eff", variable.name = "type")
# Plot the rate breakdown over time
gg_tmp <- ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
geom_hline(yintercept = 0, color = "grey20", size = 0.4) +
geom_vline(xintercept = ymd(20000101),
color = "grey20", size = 0.4) +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_color_manual("Price component:",
values = c(purple, dark_grey, light_grey, "black"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("Price component:",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS"))
# Save
save_beamer(gg_tmp, "pgeTariffSeries",
themes = theme(
# legend.direction = "vertical",
# legend.title = element_text(face = "bold", size = 11),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(size = 15),
legend.text.align = 0,
# axis.text = element_blank(),
legend.key.size = unit(12, "mm"),
NULL
))
# Figure: PG&E rate breakdown time series --------------------------------------
# Load the PG&E rate breakdown data
pge_dt <- fread(paste0(dir_csv, "pgeRateBreakdown.csv"))
# Format dates
pge_dt[, date_eff := mdy(date_eff)]
# Convert to long form
pge_dt %<>% melt(id.var = "date_eff", variable.name = "type")
# Plot the rate breakdown over time
gg_tmp <- ggplot(data = pge_dt,
aes(x = date_eff, y = value, color = type, linetype = type)) +
geom_line() +
geom_hline(yintercept = 0, color = "grey20", size = 0.4) +
geom_vline(xintercept = ymd(20000101),
color = "grey20", size = 0.4) +
xlab("") +
ylab("Volumetric charge ($ per therm)") +
scale_y_continuous(labels = function(x) sprintf("%.2f", x)) +
scale_color_manual("Price component:",
values = c(purple, dark_grey, light_grey, "black"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS")) +
scale_linetype_manual("Price component:",
values = c("solid", "twodash", "twodash", "dashed"),
labels = c("Procurement", "Baseline transportation",
"Excess transportation", "PPPS"))
# Save
save_beamer(gg_tmp, "pgeTariffSeries",
themes = theme(
# legend.direction = "vertical",
# legend.title = element_text(face = "bold", size = 11),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(size = 15),
legend.text.align = 0,
# axis.text = element_blank(),
legend.key.size = unit(12, "mm"),
NULL
))
library(pacman)
p_load(magrittr, data.table, lfe)
tmp <- data.table(x = rnorm(1e4), e = rnorm = 1e4, fe = sample(lower[1:10], 1e4))
library(pacman)
p_load(magrittr, data.table, lfe)
library(pacman)
p_load(magrittr, data.table, lfe)
tmp <- data.table(
x = rnorm(1e4),
e = rnorm(1e4),
fe = sample(lower[1:10], 1e4))
letters
library(pacman)
p_load(magrittr, data.table, lfe)
tmp <- data.table(
x = rnorm(1e4),
e = rnorm(1e4),
fe = sample(letters[1:10], 1e4))
library(pacman)
p_load(magrittr, data.table, lfe)
n <- 1e4
tmp <- data.table(
x = rnorm(n),
e = rnorm(n),
fe = sample(letters[1:10], n, replace = T))
tmp
library(pacman)
p_load(magrittr, data.table, lfe)
n <- 1e4
set.seed(12345)
tmp <- data.table(
x = rnorm(n),
e = rnorm(n),
fe = sample(1:10, n, replace = T))
tmp[, y := 12 + 7 * x + fe]
library(pacman)
p_load(magrittr, data.table, lfe)
n <- 1e4
set.seed(12345)
tmp <- data.table(
x = rnorm(n),
e = rnorm(n),
fe = sample(seq(-3, 3, 0.5), n, replace = T))
tmp[, y := 12 + 7 * x + fe^2]
library(pacman)
p_load(magrittr, data.table, lfe)
n <- 1e4
set.seed(12345)
tmp <- data.table(
x = rnorm(n),
e = rnorm(n),
fe = sample(seq(-3, 3, 0.5), n, replace = T))
tmp[, y := 12 + 7 * x + fe^3]
tmp
felm(y ~ x, tmp) %>% summary
felm(y ~ x | fe, tmp) %>% summary
tmp[, x_dm := x - mean(x), by = fe]
x
tmp
test <- felm(y ~ x | fe, data = tmp)
test
test
test <- felm(y ~ x | fe, data = tmp)
test
tmp
library(pacman)
p_load(magrittr, data.table, lfe)
n <- 1e4
set.seed(12345)
tmp <- data.table(
x = rnorm(n),
e = rnorm(n),
fe = sample(seq(-3, 3, 0.5), n, replace = T))
tmp[, y := 12 + 7 * x + fe^3]
tmp[, x_dm := x - mean(x), by = fe]
test <- felm(y ~ x | fe, data = tmp)
test
test %>% summary
test$xp
test$x
library(pacman)
p_load(magrittr, data.table, lfe)
n <- 1e4
set.seed(12345)
tmp <- data.table(
x = rnorm(n),
e = rnorm(n),
fe = sample(seq(-3, 3, 0.5), n, replace = T))
tmp[, y := 12 + 7 * x + fe^3 + 3 * e]
tmp[, x_dm := x - mean(x), by = fe]
test <- felm(y ~ x | fe, data = tmp)
test
test %>% summary
?felm
test$cX
test$cX %>% head
tmp
test$cX %>% tail
tmp %>% tail
tmp %>% tail
?felm
tmp$y - tmp$x * test
tmp$y - tmp$x * test$x
test$x
test %>% summary
test$coefficients[1,1]
test$r.residuals %>% head
test$residuals %>% head
?felm
test$coefficients[1,1] * tmp$x[1:6]
tmp$y[1:6] - test$coefficients[1,1] * tmp$x[1:6]
test <- felm(y ~ x , data = tmp)
test$residuals %>% head
test$r.residuals %>% head
library(pacman)
p_load(magrittr, data.table, lfe)
n <- 1e4
set.seed(12345)
tmp <- data.table(
x = rnorm(n),
e = rnorm(n),
fe = sample(seq(-3, 3, 0.5), n, replace = T))
tmp[, y := 12 + 7 * x + fe^3 + 3 * e]
tmp[, x_dm := x - mean(x), by = fe]
test <- felm(y ~ x | fe, data = tmp)
?felm
?test.data.table
tmp <- x
tmp <- 2
a <- data.frame(x = 1)
b = "x"
class(1)
class(1.2)
class(1L)
class("Max Auffhammer")
matrix(data = 1:4)
matrix(data = 1:4) %>% dim
library(magrittr)
matrix(data = 1:4) %>% dim
A <- matrix(data = 1:6, ncol = 2)
A
matrix(1:10, nrow = 2)
matrix(1:10, nrow = 2) %>% diag
library(rmarkdown)
setwd("/Users/edwardarubin/Dropbox/Teaching/ARE212")
render("section02.Rmd",
pdf_document(
latex_engine = "xelatex",
toc = T,
number_sections = T,
highlight = "pygments",
pandoc_args = c(
"--metadata=author:\"Ed Rubin\"",
pandoc_variable_arg("mainfont", "Charter"),
pandoc_variable_arg("monofont", "Hack"),
pandoc_variable_arg("fontsize", "11pt")
)
),
output_dir = "Section02")
